+package org.eolang
+alias goto org.eolang.goto
+alias stdout org.eolang.io.stdout
+alias sprintf org.eolang.txt.sprintf
+alias cage org.eolang.cage
+alias pyslice preface.pyslice
+alias pyint preface.pyint
+alias pair preface.pair
+alias pyfloat preface.pyfloat
+alias pystring preface.pystring
+alias pybool preface.pybool
+alias pycomplex preface.pycomplex
+alias newUID preface.newUID
+alias xfakeclasses preface.xfakeclasses
+alias mkCopy preface.mkCopy
+alias raiseNothing preface.raiseNothing
+alias continue preface.continue
+alias break preface.break
+alias return preface.return
+alias raiseEmpty preface.raiseEmpty
+alias xmyArray preface.xmyArray
+alias xmyMap preface.xmyMap
+alias xlen preface.xlen
+alias xmap preface.xmap
+alias xfilter preface.xfilter
+alias xstr preface.xstr
+alias xsum preface.xsum
+alias xlist preface.xlist
+alias xtuple preface.xtuple
+alias xint preface.xint
+alias xfloat preface.xfloat
+alias xiter preface.xiter
+alias xStopIteration preface.xStopIteration
+alias xBaseException preface.xBaseException
+alias xTypeError preface.xTypeError
+alias xZeroDivisionError preface.xZeroDivisionError
+alias xAssertionError preface.xAssertionError
+alias xValueError preface.xValueError
+alias xrange preface.xrange
+junit

[unused] > fbcn
  (pystring "fbcn") > x__name__
  [] > ap
    (pystring "fbcn") > x__name__
    [stackUp] > @
      [id] > is-exception
        id.greater (pyint 3) > @
      [id] > is-break-continue-return
        (id.greater (pyint 0)).and (id.less (pyint 4)) > @
      [] > xbool
        [x] > ap
          [stackUp] > @
            seq > @
              stackUp.forward (return x)
              123
      cage 0 > xcurrent-exception
      cage 0 > xexcinexc
      cage FALSE > xcaught
      pyslice 0 0 0 > dummy-pyslice-usage
      pyint 0 > dummy-int-usage
      pyfloat 0 > dummy-float-usage
      pybool TRUE > dummy-bool-usage
      pycomplex 0 0 > dummy-pycomplex
      pystring (sprintf "") > dummy-bool-string
      newUID > dummy-newUID
      xfakeclasses.pyComplexClass > xcomplex
      raiseNothing > dummy-rn
      continue > dummy-continue
      break > dummy-break
      return > dummy-return
      raiseEmpty > dummy-raiseEmpty
      xmyArray > dummy-xmyArray
      xmyMap > dummy-xmyMap
      mkCopy > dummy-mkCopy
      xlen > dummy-xlen
      xmap > dummy-xmap
      xfilter > dummy-xfilter
      pair > dummy-pair
      xstr > dummy-xstr
      xsum > dummy-xsum
      xlist > dummy-xlist
      xtuple > dummy-xtuple
      xint > dummy-xint
      xfloat > dummy-xfloat
      xStopIteration > dummy-stop-iteration
      xBaseException > dummy-base-exception
      xZeroDivisionError > dummy-xZeroDivisionError
      xAssertionError > dummy-xAssertionError
      xValueError > dummy-xValueError
      xTypeError > dummy-xTypeError
      xiter > dummy-xiter
      xrange > dummy-xrange
      cage 0 > tmp
      cage 0 > toReturn
      cage 0 > assertMe
      cage 0 > xfbcn
      seq > @
        stdout "fbcn\n"
        write.
          xfbcn
          []
            (pystring "xfbcn") > x__name__
            [] > ap
              (pystring "xfbcn") > x__name__
              [stackUp] > @
                cage 0 > tmp
                cage 0 > toReturn
                cage 0 > lhs18
                cage 0 > e23
                cage 0 > e39
                cage 0 > xinn0
                cage 0 > e10
                cage 0 > xcaught
                cage 0 > e40
                cage 0 > e22
                cage 0 > e33
                cage 0 > e19
                cage 0 > e6
                cage 0 > lhs20
                cage 0 > e18
                cage 0 > lhs0
                cage 0 > e29
                cage 0 > e12
                cage 0 > xj
                cage 0 > e30
                cage 0 > e41
                cage 0 > e1
                cage 0 > lhs4
                cage 0 > lhs29
                cage 0 > e34
                cage 0 > e5
                cage 0 > e28
                cage 0 > e7
                cage 0 > lhs17
                cage 0 > e17
                cage 0 > e42
                cage 0 > e0
                cage 0 > e20
                cage 0 > xarr2
                cage 0 > xinn1
                cage 0 > e35
                cage 0 > lhs28
                cage 0 > e4
                cage 0 > e24
                cage 0 > e13
                cage 0 > xit1
                cage 0 > e31
                cage 0 > e8
                cage 0 > e16
                cage 0 > lhs2
                cage 0 > e38
                cage 0 > xres
                cage 0 > lhs8
                cage 0 > e27
                cage 0 > e3
                cage 0 > lhs6
                cage 0 > e21
                cage 0 > lhs9
                cage 0 > e36
                cage 0 > e25
                cage 0 > e32
                cage 0 > e14
                cage 0 > xit0
                cage 0 > e37
                cage 0 > e9
                cage 0 > lhs30
                cage 0 > lhs19
                cage 0 > e15
                cage 0 > xi
                cage 0 > e2
                cage 0 > xarr1
                cage 0 > e26
                cage 0 > e11
                seq > @
                  stdout "xfbcn\n"
                  tmp.write (goto ((((xmyArray)).ap ((pybool TRUE)) ((* (pyint 1) (pyint 2) (pyint 3)))).@))
                  (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                  (e0).write (tmp.result)
                  ((e0).<)
                  mkCopy (e0) > tmp9
                  (xarr1).write (tmp9.copy)
                  tmp.write (goto ((((xmyArray)).ap ((pybool TRUE)) ((* (pyint 4) (pyint 5) (pyint 6)))).@))
                  (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                  (e1).write (tmp.result)
                  ((e1).<)
                  mkCopy (e1) > tmp10
                  (xarr2).write (tmp10.copy)
                  tmp.write (goto ((((xmyArray)).ap ((pybool TRUE)) ((*))).@))
                  (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                  (e2).write (tmp.result)
                  ((e2).<)
                  mkCopy (e2) > tmp11
                  (xres).write (tmp11.copy)
                  mkCopy (xarr1) > tmp12
                  (xinn0).write (tmp12.copy)
                  mkCopy (xinn0.x__iter__) > tmp13
                  (e3).write (tmp13.copy)
                  ((e3).<)
                  mkCopy (xinn0) > tmp14
                  (lhs0).write (tmp14.copy)
                  tmp.write (goto ((((e3)).ap ((lhs0))).@))
                  (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                  (e4).write (tmp.result)
                  ((e4).<)
                  mkCopy (e4) > tmp15
                  (xit0).write (tmp15.copy)
                  xcaught.write (pybool FALSE)
                  write.
                    xcurrent-exception
                    goto
                      [stackUp]
                        cage 0 > xcurrent-exception
                        cage 0 > xexcinexc
                        cage 0 > tmp
                        seq > @
                          write.
                            tmp
                            goto
                              [stackUp]
                                seq > @
                                  (pybool TRUE).as-bool.while
                                    [unused]
                                      cage 0 > tmp
                                      seq > @
                                        write.
                                          tmp
                                          goto
                                            [stackUp]
                                              cage 0 > tmp
                                              seq > @
                                                mkCopy (xit0.x__next__) > tmp16
                                                (e5).write (tmp16.copy)
                                                ((e5).<)
                                                mkCopy (xit0) > tmp17
                                                (lhs2).write (tmp17.copy)
                                                tmp.write (goto ((((e5)).ap ((lhs2))).@))
                                                (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                                (e6).write (tmp.result)
                                                ((e6).<)
                                                mkCopy (e6) > tmp18
                                                (xi).write (tmp18.copy)
                                                mkCopy (xarr2) > tmp19
                                                (xinn1).write (tmp19.copy)
                                                mkCopy (xinn1.x__iter__) > tmp20
                                                (e7).write (tmp20.copy)
                                                ((e7).<)
                                                mkCopy (xinn1) > tmp21
                                                (lhs4).write (tmp21.copy)
                                                tmp.write (goto ((((e7)).ap ((lhs4))).@))
                                                (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                                (e8).write (tmp.result)
                                                ((e8).<)
                                                mkCopy (e8) > tmp22
                                                (xit1).write (tmp22.copy)
                                                xcaught.write (pybool FALSE)
                                                write.
                                                  xcurrent-exception
                                                  goto
                                                    [stackUp]
                                                      cage 0 > xcurrent-exception
                                                      cage 0 > xexcinexc
                                                      cage 0 > tmp
                                                      seq > @
                                                        write.
                                                          tmp
                                                          goto
                                                            [stackUp]
                                                              seq > @
                                                                (pybool TRUE).as-bool.while
                                                                  [unused]
                                                                    cage 0 > tmp
                                                                    seq > @
                                                                      write.
                                                                        tmp
                                                                        goto
                                                                          [stackUp]
                                                                            cage 0 > tmp
                                                                            seq > @
                                                                              mkCopy (xit1.x__next__) > tmp23
                                                                              (e9).write (tmp23.copy)
                                                                              ((e9).<)
                                                                              mkCopy (xit1) > tmp24
                                                                              (lhs6).write (tmp24.copy)
                                                                              tmp.write (goto ((((e9)).ap ((lhs6))).@))
                                                                              (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                                                              (e10).write (tmp.result)
                                                                              ((e10).<)
                                                                              mkCopy (e10) > tmp25
                                                                              (xj).write (tmp25.copy)
                                                                              (e11).write (((xj).eq (pyint 5)))
                                                                              (e11).force
                                                                              ((e11).<)
                                                                              (e11).as-bool.if
                                                                                seq
                                                                                  stackUp.forward continue
                                                                                  (pybool TRUE)
                                                                                seq
                                                                                  (pybool TRUE)
                                                                              mkCopy (xres.xappend) > tmp26
                                                                              (e12).write (tmp26.copy)
                                                                              ((e12).<)
                                                                              mkCopy (xres) > tmp27
                                                                              (lhs8).write (tmp27.copy)
                                                                              mkCopy (xj) > tmp28
                                                                              (lhs9).write (tmp28.copy)
                                                                              tmp.write (goto ((((e12)).ap ((lhs8)) ((lhs9))).@))
                                                                              (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                                                              (e13).write (tmp.result)
                                                                              ((e13).<)
                                                                              stackUp.forward continue
                                                                              123
                                                                      (tmp.x__class__.x__id__.neq (continue.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                                                      0
                                                                stackUp.forward raiseNothing
                                                        if.
                                                          tmp.x__class__.x__id__.neq (break.x__class__.x__id__)
                                                          stackUp.forward tmp
                                                          0
                                                        stackUp.forward raiseNothing
                                                seq
                                                  write.
                                                    xexcinexc
                                                    goto
                                                      [stackUp]
                                                        if. > @
                                                          is-exception (xcurrent-exception.x__class__.x__id__)
                                                          seq
                                                            mkCopy (xcurrent-exception.x__class__) > tmp29
                                                            (e14).write (tmp29.copy)
                                                            ((e14).<)
                                                            mkCopy (e14.x__id__) > tmp30
                                                            (e15).write (tmp30.copy)
                                                            ((e15).<)
                                                            mkCopy (xStopIteration.x__id__) > tmp31
                                                            (e16).write (tmp31.copy)
                                                            ((e16).<)
                                                            (e17).write (((e15).eq (e16)))
                                                            (e17).force
                                                            ((e17).<)
                                                            (e17).as-bool.if
                                                              seq
                                                                (lhs18).write ((pybool TRUE))
                                                                (lhs18).force
                                                                (pybool TRUE)
                                                              seq
                                                                mkCopy (xcurrent-exception.x__class__) > tmp32
                                                                (e18).write (tmp32.copy)
                                                                ((e18).<)
                                                                mkCopy (e18.x__id__) > tmp33
                                                                (e19).write (tmp33.copy)
                                                                ((e19).<)
                                                                mkCopy (xfakeclasses.xpyTypeClass) > tmp34
                                                                (e20).write (tmp34.copy)
                                                                ((e20).<)
                                                                mkCopy (e20.x__id__) > tmp35
                                                                (e21).write (tmp35.copy)
                                                                ((e21).<)
                                                                (e22).write (((e19).eq (e21)))
                                                                (e22).force
                                                                ((e22).<)
                                                                (e22).as-bool.if
                                                                  seq
                                                                    mkCopy (xcurrent-exception.x__id__) > tmp36
                                                                    (e23).write (tmp36.copy)
                                                                    ((e23).<)
                                                                    mkCopy (xStopIteration.x__id__) > tmp37
                                                                    (e24).write (tmp37.copy)
                                                                    ((e24).<)
                                                                    (e25).write (((e23).eq (e24)))
                                                                    (e25).force
                                                                    ((e25).<)
                                                                    (pybool TRUE)
                                                                  seq
                                                                    (lhs17).write ((pybool FALSE))
                                                                    (lhs17).force
                                                                    mkCopy (lhs17) > tmp38
                                                                    (e25).write (tmp38.copy)
                                                                    (pybool TRUE)
                                                                mkCopy (e25) > tmp39
                                                                (lhs18).write (tmp39.copy)
                                                                (pybool TRUE)
                                                            (lhs18).as-bool.if
                                                              seq
                                                                (xcaught).write ((pybool TRUE))
                                                                (xcaught).force
                                                                (pybool TRUE)
                                                              seq
                                                                (pybool TRUE)
                                                            xcaught.if (stackUp.forward raiseNothing) (stackUp.forward xcurrent-exception)
                                                            0
                                                          seq
                                                            (stackUp.forward xcurrent-exception)
                                                            0
                                                  xexcinexc.x__class__.x__id__
                                                  if.
                                                    xcurrent-exception.x__class__.x__id__.eq (raiseNothing.x__class__.x__id__)
                                                    seq
                                                      0
                                                    0
                                                  ((is-break-continue-return (xcurrent-exception.x__class__.x__id__)).or ((is-exception (xcurrent-exception.x__class__.x__id__)).and (xcaught.not))).if (stackUp.forward xcurrent-exception) 0
                                                  ((is-break-continue-return (xexcinexc.x__class__.x__id__)).or ((is-exception (xexcinexc.x__class__.x__id__)))).if (stackUp.forward xexcinexc) 0
                                                (e26).write (((xi).eq (pyint 2)))
                                                (e26).force
                                                ((e26).<)
                                                (e26).as-bool.if
                                                  seq
                                                    stackUp.forward continue
                                                    (pybool TRUE)
                                                  seq
                                                    (pybool TRUE)
                                                mkCopy (xres.xappend) > tmp40
                                                (e27).write (tmp40.copy)
                                                ((e27).<)
                                                mkCopy (xres) > tmp41
                                                (lhs19).write (tmp41.copy)
                                                mkCopy (xi) > tmp42
                                                (lhs20).write (tmp42.copy)
                                                tmp.write (goto ((((e27)).ap ((lhs19)) ((lhs20))).@))
                                                (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                                (e28).write (tmp.result)
                                                ((e28).<)
                                                stackUp.forward continue
                                                123
                                        (tmp.x__class__.x__id__.neq (continue.x__class__.x__id__)).if (stackUp.forward tmp) 0
                                        0
                                  stackUp.forward raiseNothing
                          if.
                            tmp.x__class__.x__id__.neq (break.x__class__.x__id__)
                            stackUp.forward tmp
                            0
                          stackUp.forward raiseNothing
                  seq
                    write.
                      xexcinexc
                      goto
                        [stackUp]
                          if. > @
                            is-exception (xcurrent-exception.x__class__.x__id__)
                            seq
                              mkCopy (xcurrent-exception.x__class__) > tmp43
                              (e29).write (tmp43.copy)
                              ((e29).<)
                              mkCopy (e29.x__id__) > tmp44
                              (e30).write (tmp44.copy)
                              ((e30).<)
                              mkCopy (xStopIteration.x__id__) > tmp45
                              (e31).write (tmp45.copy)
                              ((e31).<)
                              (e32).write (((e30).eq (e31)))
                              (e32).force
                              ((e32).<)
                              (e32).as-bool.if
                                seq
                                  (lhs29).write ((pybool TRUE))
                                  (lhs29).force
                                  (pybool TRUE)
                                seq
                                  mkCopy (xcurrent-exception.x__class__) > tmp46
                                  (e33).write (tmp46.copy)
                                  ((e33).<)
                                  mkCopy (e33.x__id__) > tmp47
                                  (e34).write (tmp47.copy)
                                  ((e34).<)
                                  mkCopy (xfakeclasses.xpyTypeClass) > tmp48
                                  (e35).write (tmp48.copy)
                                  ((e35).<)
                                  mkCopy (e35.x__id__) > tmp49
                                  (e36).write (tmp49.copy)
                                  ((e36).<)
                                  (e37).write (((e34).eq (e36)))
                                  (e37).force
                                  ((e37).<)
                                  (e37).as-bool.if
                                    seq
                                      mkCopy (xcurrent-exception.x__id__) > tmp50
                                      (e38).write (tmp50.copy)
                                      ((e38).<)
                                      mkCopy (xStopIteration.x__id__) > tmp51
                                      (e39).write (tmp51.copy)
                                      ((e39).<)
                                      (e40).write (((e38).eq (e39)))
                                      (e40).force
                                      ((e40).<)
                                      (pybool TRUE)
                                    seq
                                      (lhs28).write ((pybool FALSE))
                                      (lhs28).force
                                      mkCopy (lhs28) > tmp52
                                      (e40).write (tmp52.copy)
                                      (pybool TRUE)
                                  mkCopy (e40) > tmp53
                                  (lhs29).write (tmp53.copy)
                                  (pybool TRUE)
                              (lhs29).as-bool.if
                                seq
                                  (xcaught).write ((pybool TRUE))
                                  (xcaught).force
                                  (pybool TRUE)
                                seq
                                  (pybool TRUE)
                              xcaught.if (stackUp.forward raiseNothing) (stackUp.forward xcurrent-exception)
                              0
                            seq
                              (stackUp.forward xcurrent-exception)
                              0
                    xexcinexc.x__class__.x__id__
                    if.
                      xcurrent-exception.x__class__.x__id__.eq (raiseNothing.x__class__.x__id__)
                      seq
                        0
                      0
                    ((is-break-continue-return (xcurrent-exception.x__class__.x__id__)).or ((is-exception (xcurrent-exception.x__class__.x__id__)).and (xcaught.not))).if (stackUp.forward xcurrent-exception) 0
                    ((is-break-continue-return (xexcinexc.x__class__.x__id__)).or ((is-exception (xexcinexc.x__class__.x__id__)))).if (stackUp.forward xexcinexc) 0
                  mkCopy (xres) > tmp54
                  (lhs30).write (tmp54.copy)
                  tmp.write (goto ((((xmyArray)).ap ((pybool TRUE)) ((* (pyint 4) (pyint 6) (pyint 1) (pyint 4) (pyint 6) (pyint 4) (pyint 6) (pyint 3)))).@))
                  (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
                  (e41).write (tmp.result)
                  ((e41).<)
                  (e42).write (((lhs30).eq (e41)))
                  (e42).force
                  ((e42).<)
                  toReturn.write ((e42))
                  stackUp.forward (return toReturn)
                  stackUp.forward (return 0)
                  123
        tmp.write (goto ((((xfbcn)).ap).@))
        (tmp.x__class__.x__id__.neq (return.x__class__.x__id__)).if (stackUp.forward tmp) 0
        (assertMe).write (tmp.result)
        toReturn.write ((assertMe))
        stackUp.forward (return toReturn)
        stackUp.forward (return 0)
  seq > @
    (goto (ap.@)).result